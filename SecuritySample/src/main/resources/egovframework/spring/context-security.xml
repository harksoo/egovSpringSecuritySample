<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security.xsd">
						
	<!-- 안트 스타링 패턴(Ant style 것으로 예상) : ** 파일명, *특정 폴더 -->

	<!-- http basic login 설정 
	<http auto-config="true">
		<intercept-url pattern="/sample/add*" access="ROLE_ADMIN" />
		<intercept-url pattern="/sample/update*" access="ROLE_ADMIN" />
		<intercept-url pattern="/sample/delete*" access="ROLE_ADMIN" />
		<intercept-url pattern="/**" access="ROLE_USER" />
		<http-basic />
	</http>
	-->
	
	<!-- form & basic 로그인 화면 변경 -->
	<http pattern="/css/**" security="none" />
	<http pattern="/images/**" security="none" />
	
	<http access-denied-page="/common/accessDenied.jsp">
		<!-- 
		<intercept-url pattern="/common/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<intercept-url pattern="/sample/add*" access="ROLE_ADMIN" />
		<intercept-url pattern="/sample/update*" access="ROLE_ADMIN" />
		<intercept-url pattern="/sample/delete*" access="ROLE_ADMIN" />
		<intercept-url pattern="/**" access="ROLE_USER" />
		 -->
		
		<form-login login-page="/common/login.jsp" authentication-failure-url="/common/login.jsp?fail=true"/>
		<logout logout-success-url="/common/logout.jsp"/>
		
		<anonymous/>

		
		<!-- for authorization -->
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>

	</http>
	
	
	
	<authentication-manager>
		<!-- 
		<authentication-provider>
			<user-service>
				<user name="user" password="user" authorities="ROLE_USER" />
				<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
			</user-service>
			
			<password-encoder hash="sha-256"/>
		</authentication-provider>
		 -->
		 
		 <authentication-provider user-service-ref="jdbcUserService">
		 	<password-encoder hash="sha-256"/>
		 </authentication-provider>
		
	</authentication-manager>
	
	<!--
	<jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
		users-by-username-query="SELECT USER_ID, PASSWORD, ENABLED, USER_NAME FROM USERS WHERE USER_ID = ?"
		authorities-by-username-query="SELECT USER_ID, AUTHORITY FROM AUTHORITIES WHERE USER_ID = ?" />
	-->
	
	<!-- customizing user table, authorities table -->	 
	<beans:bean id="jdbcUserService"
			class="egovframework.rte.improved.security.userdetails.jdbc.EgovJdbcUserDetailsManager" >
		<beans:property name="usersByUsernameQuery" value="SELECT USER_ID, PASSWORD, ENABLED, USER_NAME FROM USERS WHERE USER_ID = ? "/>
		<beans:property name="authoritiesByUsernameQuery" value="SELECT USER_ID, AUTHORITY FROM AUTHORITIES WHERE USER_ID = ? "/>
		<beans:property name="roleHierarchy" ref="roleHierarchy" />
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapClass" value="egovframework.rte.cmmn.security.EgovUserDetailsMapping" />
	</beans:bean>
	
	<beans:bean id="securedObjectService"
		class="egovframework.rte.improved.security.securedobject.impl.SecuredObjectServiceImpl">
		<beans:property name="securedObjectDAO" ref="securedObjectDAO"/>
	</beans:bean>

	<beans:bean id="securedObjectDAO" class="egovframework.rte.improved.security.securedobject.impl.SecuredObjectDAO" >
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<beans:bean id="roleHierarchy" 
			class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl" >
		<!-- XML 사용 
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_USER
				ROLE_USER > ROLE_RESTRICTED
				ROLE_RESTRICTED > IS_AUTHENTICATED_FULLY
				IS_AUTHENTICATED_REMEMBERED > IS_AUTHENTICATED_ANONYMOUSLY
			</beans:value>
		</beans:property>
		-->
		<!-- DB 사용 -->
		<beans:property name="hierarchy" ref="hierarchyStrings"/>
	</beans:bean>

	<beans:bean id="hierarchyStrings"
		class="egovframework.rte.improved.security.userdetails.hierarchicalroles.HierarchyStringsFactoryBean"
		init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService"/>
	</beans:bean>
	
	<!-- for authorization -->	
	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">	
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
		<beans:property name="accessDecisionManager" ref="org.springframework.security.access.vote.AffirmativeBased#0" />
		<beans:property name="securityMetadataSource" ref="databaseSecurityMetadataSource" />
	</beans:bean>
	
	<beans:bean id="databaseSecurityMetadataSource"
		class="egovframework.rte.improved.security.intercept.EgovReloadableFilterInvocationSecurityMetadataSource">
		<beans:constructor-arg ref="requestMap" />	
		<beans:property name="securedObjectService" ref="securedObjectService"/>
	</beans:bean>
	
	<!--  url  -->
	<beans:bean id="requestMap"
		class="egovframework.rte.improved.security.intercept.UrlResourcesMapFactoryBean"
		init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService"/>
	</beans:bean>
	
	<!-- method -->
	<beans:bean id="methodSecurityMetadataSourceAdvisor" 
		class="org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor">
		<beans:constructor-arg value="methodSecurityInterceptor"/>
		<beans:constructor-arg ref="delegatingMethodSecurityMetadataSource"/>
		<beans:constructor-arg value="delegatingMethodSecurityMetadataSource"/>
	</beans:bean>
	
	<beans:bean id="methodSecurityInterceptor" 
		class="org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor">
		<beans:property name="validateConfigAttributes" value="false"/>
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager"/>
		<beans:property name="accessDecisionManager" ref="org.springframework.security.access.vote.AffirmativeBased#0"/>
		<beans:property name="securityMetadataSource" ref="delegatingMethodSecurityMetadataSource"/>
	</beans:bean>
	
	<beans:bean id="delegatingMethodSecurityMetadataSource" 
		class="org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource">
		<beans:constructor-arg>
			<beans:list>
				<beans:ref bean="methodSecurityMetadataSources"/>
				<beans:bean class="org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource"/>
				<beans:bean class="org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource"></beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="methodSecurityMetadataSources" 
		class="org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource">
		<beans:constructor-arg ref="methodMap"></beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="methodMap" 
		class="egovframework.rte.improved.security.intercept.MethodResourcesMapFactoryBean" init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService"/>
		<beans:property name="resourceType" value="method"/>
	</beans:bean>
	
	
	
</beans:beans>